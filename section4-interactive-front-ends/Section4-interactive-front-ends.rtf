{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10700\viewh16080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 9/27/21\
Ethereum & Solidity Course Notes\
https://www.udemy.com/course/ethereum-and-solidity-the-complete-developers-guide/\
Section 4- Building Interactive Front Ends\
\
101. Multiple Web3 Instances\
- 
\f1\b \ul whenever Meta Mask is running inside your browser, it automatically injects\
The web3 Library into any active page!!!
\f0\b0 \ulnone \
- web3 version that\'92s injected into page from Meta Mask is using v 0.20\
	- older version that doesn\'92t use async await\
	- can\'92t stop this injection\
	- has a provider already set up!\
		- 
\f1\b \ul provider
\f0\b0 \ulnone  stores private/public keys\
- our app will be using web3 v 1.0\
	- take our instance of web3 and tear out the provider our app is using\
	and use the provider that Metamask is using, because that \
	Metamask provider is already connected to our test network Rinkeby\
	- see lecture slide 4-5-101\
- assumption is that user has Metamask installed!\
	  \
\
104. \
To prevent Error:transaction underpriced (due to changes in EIP 1599)\
- when we deploy our contract, we need to specify gasPrice w/ amount high enough\
.send(\{gas: \'911000000\'92, gasPrice: \'915000000000\'92 from:accounts[0] \} );\
\
\
105. Deploying lottery contract\
- feeding ABI into web3 instance, creates local copy of contract\
- then deploy contract and tell web3 what address to deploy the contract at\
- see slide 4-5-105\
\
\
\
\
\
QUESTIONS\
- what happens when we run deploy.js script twice?\
(ex. I revise the smart contract due to some bugs)\
https://ethereum.stackexchange.com/questions/79936/what-happens-when-i-redeploy-my-contract-on-truffle\
	- will have 2 contracts that work as 2 separate entities\
	- a contract deployed has one address and cannot be modified!\
	- if you deploy it again, it will have another address!\
\
- https://ethereum.stackexchange.com/questions/64381/how-state-variable-are-stored-and-updated\
	- this seems inefficient, why not just retrieve the last value? Instead of iterating?\
\
\
}